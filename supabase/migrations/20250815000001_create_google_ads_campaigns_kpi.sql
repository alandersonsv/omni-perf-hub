-- Create google_ads_campaigns_kpi table for storing Google Ads campaign data
CREATE TABLE IF NOT EXISTS public.google_ads_campaigns_kpi (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  agency_id UUID NOT NULL,
  account_id TEXT NOT NULL,
  campaign_id TEXT NOT NULL,
  name TEXT NOT NULL,
  status TEXT NOT NULL,
  budget DECIMAL,
  date DATE NOT NULL,
  impressions INTEGER,
  clicks INTEGER,
  cost DECIMAL,
  conversions INTEGER,
  conversion_value DECIMAL,
  ctr DECIMAL,
  cpc DECIMAL,
  cpa DECIMAL,
  roas DECIMAL,
  created_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  updated_at TIMESTAMPTZ NOT NULL DEFAULT now(),
  UNIQUE(agency_id, account_id, campaign_id, date)
);

-- Enable RLS on google_ads_campaigns_kpi table
ALTER TABLE public.google_ads_campaigns_kpi ENABLE ROW LEVEL SECURITY;

-- Create policy for agency members to view Google Ads campaign data
DROP POLICY IF EXISTS "Agency members can view Google Ads campaign data" ON public.google_ads_campaigns_kpi;
CREATE POLICY "Agency members can view Google Ads campaign data"
ON public.google_ads_campaigns_kpi
FOR SELECT
USING (
  auth.uid() IN (
    SELECT tm.id FROM public.team_members tm WHERE tm.agency_id = google_ads_campaigns_kpi.agency_id
  )
);

-- Create policy for agency admins to manage Google Ads campaign data
DROP POLICY IF EXISTS "Agency admins can manage Google Ads campaign data" ON public.google_ads_campaigns_kpi;
CREATE POLICY "Agency admins can manage Google Ads campaign data"
ON public.google_ads_campaigns_kpi
FOR ALL
USING (
  auth.uid() IN (
    SELECT tm.id FROM public.team_members tm
    WHERE tm.agency_id = google_ads_campaigns_kpi.agency_id
      AND tm.role = ANY (ARRAY['owner'::user_role, 'admin'::user_role])
  )
)
WITH CHECK (
  auth.uid() IN (
    SELECT tm.id FROM public.team_members tm
    WHERE tm.agency_id = google_ads_campaigns_kpi.agency_id
      AND tm.role = ANY (ARRAY['owner'::user_role, 'admin'::user_role])
  )
);

-- Create index on agency_id and account_id for faster queries
CREATE INDEX IF NOT EXISTS google_ads_campaigns_kpi_agency_account_idx ON public.google_ads_campaigns_kpi (agency_id, account_id);

-- Create index on date for faster time-based queries
CREATE INDEX IF NOT EXISTS google_ads_campaigns_kpi_date_idx ON public.google_ads_campaigns_kpi (date DESC);

-- Add trigger to update updated_at column
CREATE TRIGGER trg_update_google_ads_campaigns_kpi_updated_at
BEFORE UPDATE ON public.google_ads_campaigns_kpi
FOR EACH ROW EXECUTE FUNCTION public.update_modified_column();