-- Security Fix Migration: Remove vulnerable policies and implement proper RLS
-- This migration addresses critical security vulnerabilities identified in the audit

-- Issue 1 & 2: Fix vulnerable "Authenticated users can view KPI" policy
-- This policy allows ANY authenticated user to view sensitive Google Ads data
DO $$
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'google_ads_campaigns_kpi') THEN
        DROP POLICY IF EXISTS "Authenticated users can view KPI" ON public.google_ads_campaigns_kpi;
        
        -- Ensure proper agency-based access control is in place
        DROP POLICY IF EXISTS "Agency members can view Google Ads KPI data" ON public.google_ads_campaigns_kpi;
        CREATE POLICY "Agency members can view Google Ads KPI data"
        ON public.google_ads_campaigns_kpi
        FOR SELECT
        USING (
          auth.uid() IN (
            SELECT tm.id FROM public.team_members tm 
            WHERE tm.agency_id = google_ads_campaigns_kpi.agency_id
              AND tm.role IN ('owner', 'admin', 'analyst', 'viewer')
          )
        );
    END IF;
END
$$;

-- Note: google_ads_campaigns table doesn't have agency_id column
-- Security policies are handled by google_ads_campaigns_kpi table instead
-- which has proper agency_id column and RLS policies

-- Add audit logging for sensitive data access
CREATE OR REPLACE FUNCTION log_sensitive_data_access()
RETURNS TRIGGER AS $$
BEGIN
    INSERT INTO public.audit_log (user_id, table_name, action, timestamp)
    VALUES (auth.uid(), TG_TABLE_NAME, TG_OP, NOW());
    RETURN COALESCE(NEW, OLD);
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- Create audit log table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.audit_log (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id UUID,
    table_name TEXT NOT NULL,
    action TEXT NOT NULL,
    timestamp TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Enable RLS on audit log
ALTER TABLE public.audit_log ENABLE ROW LEVEL SECURITY;

-- Only allow admins to view audit logs (check if team_members table exists)
DO $$
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'team_members') THEN
        DROP POLICY IF EXISTS "Only admins can view audit logs" ON public.audit_log;
         CREATE POLICY "Only admins can view audit logs"
         ON public.audit_log
         FOR SELECT
         USING (
           auth.uid() IN (
             SELECT tm.id FROM public.team_members tm 
             WHERE tm.role IN ('owner', 'admin')
           )
         );
    END IF;
END
$$;

-- Add audit triggers to sensitive tables (only if tables exist)
DO $$
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'google_ads_campaigns_kpi') THEN
        DROP TRIGGER IF EXISTS audit_google_ads_campaigns_kpi ON public.google_ads_campaigns_kpi;
        -- Note: AFTER SELECT triggers are not supported in PostgreSQL, using AFTER INSERT/UPDATE/DELETE instead
        CREATE TRIGGER audit_google_ads_campaigns_kpi_insert
            AFTER INSERT ON public.google_ads_campaigns_kpi
            FOR EACH ROW EXECUTE FUNCTION log_sensitive_data_access();
        CREATE TRIGGER audit_google_ads_campaigns_kpi_update
            AFTER UPDATE ON public.google_ads_campaigns_kpi
            FOR EACH ROW EXECUTE FUNCTION log_sensitive_data_access();
        CREATE TRIGGER audit_google_ads_campaigns_kpi_delete
            AFTER DELETE ON public.google_ads_campaigns_kpi
            FOR EACH ROW EXECUTE FUNCTION log_sensitive_data_access();
    END IF;
END
$$;

-- Add comment for documentation (only if table exists)
DO $$
BEGIN
    IF EXISTS (SELECT FROM information_schema.tables WHERE table_schema = 'public' AND table_name = 'google_ads_campaigns_kpi') THEN
        -- Check if the policy exists before adding comment
        IF EXISTS (SELECT 1 FROM pg_policies WHERE schemaname = 'public' AND tablename = 'google_ads_campaigns_kpi' AND policyname = 'Agency members can view Google Ads KPI data') THEN
            COMMENT ON POLICY "Agency members can view Google Ads KPI data" ON public.google_ads_campaigns_kpi IS 
            'Restricts access to Google Ads KPI data to authenticated team members of the same agency only. Fixes security vulnerability where any authenticated user could access sensitive campaign data.';
        END IF;
    END IF;
END
$$;