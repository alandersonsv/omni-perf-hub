-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.agencies (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  name text NOT NULL,
  email text NOT NULL UNIQUE,
  phone text,
  subscription_plan USER-DEFINED DEFAULT 'trial'::subscription_plan,
  trial_ends_at timestamp with time zone DEFAULT (now() + '14 days'::interval),
  n8n_instance_id text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT agencies_pkey PRIMARY KEY (id)
);
CREATE TABLE public.agency_clients (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  name text NOT NULL,
  cnpj text,
  phone text,
  email text,
  whatsapp_number text,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT agency_clients_pkey PRIMARY KEY (id),
  CONSTRAINT agency_clients_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.ai_requests (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  user_id uuid NOT NULL,
  prompt text NOT NULL,
  context jsonb NOT NULL DEFAULT '{}'::jsonb,
  status text NOT NULL DEFAULT 'queued'::text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT ai_requests_pkey PRIMARY KEY (id)
);
CREATE TABLE public.ai_results (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  request_id uuid NOT NULL,
  agency_id uuid NOT NULL,
  content jsonb NOT NULL,
  score numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT ai_results_pkey PRIMARY KEY (id),
  CONSTRAINT ai_results_request_id_fkey FOREIGN KEY (request_id) REFERENCES public.ai_requests(id)
);
CREATE TABLE public.alerts_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  alert_type USER-DEFINED NOT NULL,
  threshold_value numeric,
  platforms jsonb DEFAULT '[]'::jsonb,
  notify_time time without time zone DEFAULT '09:00:00'::time without time zone,
  is_active boolean DEFAULT false,
  webhook_url text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT alerts_config_pkey PRIMARY KEY (id),
  CONSTRAINT alerts_config_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.alerts_log (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  alert_type USER-DEFINED NOT NULL,
  severity text,
  message text,
  meta jsonb NOT NULL DEFAULT '{}'::jsonb,
  channels jsonb NOT NULL DEFAULT '[]'::jsonb,
  sent_to jsonb NOT NULL DEFAULT '[]'::jsonb,
  status text NOT NULL DEFAULT 'queued'::text,
  error text,
  created_by uuid,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT alerts_log_pkey PRIMARY KEY (id)
);
CREATE TABLE public.billing_events (
  id bigint NOT NULL DEFAULT nextval('billing_events_id_seq'::regclass),
  user_id uuid,
  email text,
  type text NOT NULL,
  stripe_object_id text,
  payload jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT billing_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.categories (
  id bigint NOT NULL DEFAULT nextval('categories_id_seq'::regclass),
  shop_id uuid NOT NULL,
  wc_id bigint NOT NULL,
  name text,
  slug text,
  parent_wcid bigint,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.customers (
  id bigint NOT NULL DEFAULT nextval('customers_id_seq'::regclass),
  shop_id uuid NOT NULL,
  wc_id bigint NOT NULL,
  email text,
  first_name text,
  last_name text,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id),
  CONSTRAINT customers_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.dashboard_templates (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  title text NOT NULL,
  description text,
  platform USER-DEFINED,
  config jsonb NOT NULL DEFAULT '{}'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT dashboard_templates_pkey PRIMARY KEY (id)
);
CREATE TABLE public.dashboard_widgets (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  dashboard_id uuid NOT NULL,
  type text NOT NULL,
  title text,
  position jsonb NOT NULL DEFAULT '{}'::jsonb,
  config jsonb NOT NULL DEFAULT '{}'::jsonb,
  query jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT dashboard_widgets_pkey PRIMARY KEY (id),
  CONSTRAINT dashboard_widgets_dashboard_id_fkey FOREIGN KEY (dashboard_id) REFERENCES public.dashboards(id)
);
CREATE TABLE public.dashboards (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  owner_user_id uuid NOT NULL,
  title text NOT NULL,
  description text,
  layout jsonb NOT NULL DEFAULT '[]'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT dashboards_pkey PRIMARY KEY (id),
  CONSTRAINT dashboards_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.ga4_daily (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  property_id text NOT NULL,
  date date NOT NULL,
  sessions numeric,
  users numeric,
  new_users numeric,
  pageviews numeric,
  conversions numeric,
  revenue numeric,
  bounce_rate numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT ga4_daily_pkey PRIMARY KEY (id)
);
CREATE TABLE public.google_ads_campaigns (
  id bigint NOT NULL DEFAULT nextval('google_ads_campaigns_id_seq'::regclass),
  campaign_id text,
  customer_id text,
  campaign_name text NOT NULL,
  status text,
  start_date date,
  end_date date,
  campaign_type text,
  budget numeric,
  date date,
  total_spent numeric,
  clicks integer,
  cost_per_click numeric,
  conversions numeric,
  cost_per_conversion numeric,
  conversion_value numeric,
  average_ticket numeric,
  roas numeric,
  conversion_rate numeric,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  ctr numeric,
  impressions numeric,
  CONSTRAINT google_ads_campaigns_pkey PRIMARY KEY (id, campaign_name)
);
CREATE TABLE public.google_ads_campaigns_kpi (
  id bigint NOT NULL DEFAULT nextval('google_ads_campaigns_id_seq'::regclass),
  campaign_id text,
  customer_id text,
  campaign_name text NOT NULL,
  status text,
  start_date date,
  end_date date,
  campaign_type text,
  budget numeric,
  date date,
  total_spent numeric,
  clicks integer,
  cost_per_click numeric,
  conversions numeric,
  cost_per_conversion numeric,
  conversion_value numeric,
  average_ticket numeric,
  roas numeric,
  conversion_rate numeric,
  updated_at timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  ctr numeric,
  impressions numeric,
  agency_id uuid NOT NULL,
  account_id text,
  CONSTRAINT google_ads_campaigns_kpi_pkey PRIMARY KEY (id, campaign_name),
  CONSTRAINT google_ads_campaigns_kpi_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.google_ads_sync_log (
  id bigint NOT NULL DEFAULT nextval('google_ads_sync_log_id_seq'::regclass),
  total_customers integer NOT NULL DEFAULT 0,
  total_campaigns integer NOT NULL DEFAULT 0,
  campaigns_synced integer NOT NULL DEFAULT 0,
  sync_status text CHECK (sync_status = ANY (ARRAY['SUCCESS'::text, 'PARTIAL'::text, 'FAILED'::text])),
  error_message text,
  sync_timestamp timestamp with time zone DEFAULT CURRENT_TIMESTAMP,
  created_by uuid,
  CONSTRAINT google_ads_sync_log_pkey PRIMARY KEY (id),
  CONSTRAINT google_ads_sync_log_created_by_fkey FOREIGN KEY (created_by) REFERENCES auth.users(id)
);
CREATE TABLE public.integrations (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  platform USER-DEFINED NOT NULL,
  account_id text NOT NULL,
  credentials jsonb,
  is_active boolean DEFAULT true,
  last_sync timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT integrations_pkey PRIMARY KEY (id),
  CONSTRAINT integrations_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.invoices (
  id bigint NOT NULL DEFAULT nextval('invoices_id_seq'::regclass),
  user_id uuid,
  email text,
  stripe_invoice_id text UNIQUE,
  status text,
  amount_cents integer,
  currency text DEFAULT 'usd'::text,
  period_start timestamp with time zone,
  period_end timestamp with time zone,
  hosted_invoice_url text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT invoices_pkey PRIMARY KEY (id)
);
CREATE TABLE public.meta_ads_insights_daily (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  account_id text NOT NULL,
  campaign_id text,
  adset_id text,
  ad_id text,
  date date NOT NULL,
  impressions numeric,
  clicks numeric,
  spend numeric,
  conversions numeric,
  revenue numeric,
  cpc numeric,
  cpa numeric,
  roas numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT meta_ads_insights_daily_pkey PRIMARY KEY (id)
);
CREATE TABLE public.n8n_events (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  event_type text NOT NULL,
  payload jsonb NOT NULL DEFAULT '{}'::jsonb,
  status text NOT NULL DEFAULT 'pending'::text,
  response jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  processed_at timestamp with time zone,
  CONSTRAINT n8n_events_pkey PRIMARY KEY (id)
);
CREATE TABLE public.order_items (
  id bigint NOT NULL DEFAULT nextval('order_items_id_seq'::regclass),
  shop_id uuid NOT NULL,
  order_wcid bigint NOT NULL,
  line_item_id bigint NOT NULL,
  product_wcid bigint,
  variation_wcid bigint,
  quantity integer,
  price numeric,
  total numeric,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT order_items_pkey PRIMARY KEY (id),
  CONSTRAINT order_items_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.orders (
  id bigint NOT NULL DEFAULT nextval('orders_id_seq'::regclass),
  shop_id uuid NOT NULL,
  wc_id bigint NOT NULL,
  status text,
  customer_wcid bigint,
  total numeric,
  subtotal numeric,
  discount_total numeric,
  shipping_total numeric,
  currency text,
  order_created_at timestamp with time zone,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT orders_pkey PRIMARY KEY (id),
  CONSTRAINT orders_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.plans (
  id text NOT NULL,
  name text NOT NULL,
  description text,
  price_cents integer NOT NULL,
  currency text NOT NULL DEFAULT 'usd'::text,
  stripe_price_id text,
  features jsonb NOT NULL DEFAULT '[]'::jsonb,
  is_active boolean NOT NULL DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.product_variations (
  id bigint NOT NULL DEFAULT nextval('product_variations_id_seq'::regclass),
  shop_id uuid NOT NULL,
  wc_id bigint NOT NULL,
  parent_product_wcid bigint NOT NULL,
  sku text,
  price numeric,
  stock_quantity integer,
  status text,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT product_variations_pkey PRIMARY KEY (id),
  CONSTRAINT product_variations_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.products (
  id bigint NOT NULL DEFAULT nextval('products_id_seq'::regclass),
  shop_id uuid NOT NULL,
  wc_id bigint NOT NULL,
  name text,
  sku text,
  price numeric,
  stock_quantity integer,
  status text,
  categories jsonb NOT NULL DEFAULT '[]'::jsonb,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT products_pkey PRIMARY KEY (id),
  CONSTRAINT products_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.products_categories (
  shop_id uuid NOT NULL,
  product_wcid bigint NOT NULL,
  category_wcid bigint NOT NULL,
  CONSTRAINT products_categories_pkey PRIMARY KEY (shop_id, product_wcid, category_wcid),
  CONSTRAINT products_categories_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.profiles (
  id uuid NOT NULL,
  email text NOT NULL UNIQUE,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT profiles_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_id_fkey FOREIGN KEY (id) REFERENCES auth.users(id)
);
CREATE TABLE public.reports_config (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  client_id uuid NOT NULL,
  name text NOT NULL,
  metrics jsonb NOT NULL DEFAULT '[]'::jsonb,
  message_template text,
  frequency USER-DEFINED DEFAULT 'weekly'::report_frequency,
  send_time time without time zone DEFAULT '09:00:00'::time without time zone,
  send_days jsonb DEFAULT '[1, 2, 3, 4, 5]'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT reports_config_pkey PRIMARY KEY (id),
  CONSTRAINT reports_config_client_id_fkey FOREIGN KEY (client_id) REFERENCES public.agency_clients(id),
  CONSTRAINT reports_config_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.search_console_pages_daily (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  site_url text NOT NULL,
  page text NOT NULL,
  date date NOT NULL,
  clicks numeric,
  impressions numeric,
  ctr numeric,
  position numeric,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT search_console_pages_daily_pkey PRIMARY KEY (id)
);
CREATE TABLE public.shops (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  name text,
  url text NOT NULL,
  consumer_key_encrypted text NOT NULL,
  consumer_secret_encrypted text NOT NULL,
  status text NOT NULL DEFAULT 'disconnected'::text,
  webhook_secret text,
  last_synced_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT shops_pkey PRIMARY KEY (id),
  CONSTRAINT shops_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.subscribers (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  user_id uuid,
  email text NOT NULL UNIQUE,
  stripe_customer_id text,
  subscribed boolean NOT NULL DEFAULT false,
  subscription_tier text,
  subscription_end timestamp with time zone,
  agency_id uuid,
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT subscribers_pkey PRIMARY KEY (id),
  CONSTRAINT subscribers_user_id_fkey FOREIGN KEY (user_id) REFERENCES auth.users(id),
  CONSTRAINT subscribers_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.sync_jobs (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  shop_id uuid NOT NULL,
  type USER-DEFINED NOT NULL,
  status USER-DEFINED NOT NULL DEFAULT 'queued'::sync_status,
  started_at timestamp with time zone,
  finished_at timestamp with time zone,
  stats jsonb NOT NULL DEFAULT '{}'::jsonb,
  error text,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT sync_jobs_pkey PRIMARY KEY (id),
  CONSTRAINT sync_jobs_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.sync_logs (
  id bigint NOT NULL DEFAULT nextval('sync_logs_id_seq'::regclass),
  job_id uuid NOT NULL,
  level text NOT NULL DEFAULT 'info'::text,
  message text NOT NULL,
  details jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT sync_logs_pkey PRIMARY KEY (id),
  CONSTRAINT sync_logs_job_id_fkey FOREIGN KEY (job_id) REFERENCES public.sync_jobs(id)
);
CREATE TABLE public.team_members (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  email text NOT NULL,
  role USER-DEFINED DEFAULT 'viewer'::user_role,
  permissions jsonb DEFAULT '{}'::jsonb,
  invited_at timestamp with time zone NOT NULL DEFAULT now(),
  accepted_at timestamp with time zone,
  CONSTRAINT team_members_pkey PRIMARY KEY (id),
  CONSTRAINT team_members_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.user_metrics (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  user_id uuid NOT NULL,
  name text NOT NULL,
  expression text NOT NULL,
  description text,
  is_public boolean NOT NULL DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT user_metrics_pkey PRIMARY KEY (id),
  CONSTRAINT user_metrics_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);
CREATE TABLE public.webhook_logs (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  agency_id uuid NOT NULL,
  platform USER-DEFINED NOT NULL,
  account_id text NOT NULL,
  event_type text NOT NULL,
  payload jsonb NOT NULL DEFAULT '{}'::jsonb,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT webhook_logs_pkey PRIMARY KEY (id)
);
CREATE TABLE public.whatsapp_connections (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  agency_id uuid NOT NULL,
  phone_number text NOT NULL,
  qr_code text,
  status USER-DEFINED DEFAULT 'disconnected'::connection_status,
  evolution_session_id text,
  connected_at timestamp with time zone,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  updated_at timestamp with time zone NOT NULL DEFAULT now(),
  CONSTRAINT whatsapp_connections_pkey PRIMARY KEY (id),
  CONSTRAINT whatsapp_connections_agency_id_fkey FOREIGN KEY (agency_id) REFERENCES public.agencies(id)
);